
CREATE TABLE IF NOT EXISTS public.container_values
(
    value_id integer NOT NULL,
    value_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT container_values_pkey PRIMARY KEY (value_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.container_values
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.companies
(
    company_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 5 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    company_name character varying(255) COLLATE pg_catalog."default",
    is_labor boolean,
    CONSTRAINT companies_pkey PRIMARY KEY (company_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.companies
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.branches
(
    branch_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 22 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    branch_name character varying(255) COLLATE pg_catalog."default",
    company_id integer NOT NULL,
    CONSTRAINT branches_pkey PRIMARY KEY (branch_id),
    CONSTRAINT fkjuiihymin83oadf71ou3oelya FOREIGN KEY (company_id)
        REFERENCES public.companies (company_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.branches
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.departments
(
    department_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 31 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    department_name character varying(255) COLLATE pg_catalog."default",
    branch_id integer NOT NULL,
    CONSTRAINT departments_pkey PRIMARY KEY (department_id),
    CONSTRAINT refbranch FOREIGN KEY (branch_id)
        REFERENCES public.branches (branch_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.departments
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.time_standards
(
    time_standard_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 26 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    first_point_id integer,
    second_point_id integer,
    time_standard integer,
    CONSTRAINT time_standards_pkey PRIMARY KEY (time_standard_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.time_standards
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.users
(
    user_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 46 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    department_id integer,
    email character varying(255) COLLATE pg_catalog."default",
    is_enabled boolean,
    is_temporary boolean,
    password character varying(255) COLLATE pg_catalog."default",
    "position" character varying(255) COLLATE pg_catalog."default",
    role character varying(255) COLLATE pg_catalog."default",
    user_firstname character varying(255) COLLATE pg_catalog."default",
    user_surname character varying(255) COLLATE pg_catalog."default",
    login character varying(255) COLLATE pg_catalog."default",
    branch_id integer,
    memory character varying(1000) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (user_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.user_rights
(
    rights_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 51 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    rights character varying(255) COLLATE pg_catalog."default",
    department_id integer,
    user_id bigint,
    user_rights_id bigint,
    CONSTRAINT user_rights_pkey PRIMARY KEY (rights_id),
    CONSTRAINT fkbyhtwm23xfojop019820x5kol FOREIGN KEY (user_rights_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkf4ougno3bxa9w57mjxldwsow3 FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkjh20csjfvoe75qimjhs8lmypk FOREIGN KEY (department_id)
        REFERENCES public.departments (department_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.user_rights
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.alarm_groups
(
    alarm_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 3 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    alarm_group_name character varying(255) COLLATE pg_catalog."default",
    branch_id integer,
    CONSTRAINT alarm_groups_pkey PRIMARY KEY (alarm_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.alarm_groups
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.alarm_users
(
    alarm_group_id integer NOT NULL,
    users_user_id bigint NOT NULL,
    CONSTRAINT fk5xuio6nbwd9pkp59tvv9hbhb9 FOREIGN KEY (users_user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk6gwde2tlmfv2r69qymy7768sq FOREIGN KEY (alarm_group_id)
        REFERENCES public.alarm_groups (alarm_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.alarm_users
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.parcels
(
    parcel_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    create_date timestamp without time zone,
    is_delivered boolean,
    parcel_number character varying(255) COLLATE pg_catalog."default",
    parent_number character varying(120) COLLATE pg_catalog."default",
    create_user_id bigint NOT NULL,
    department_out_id integer NOT NULL,
    department_to_id integer,
    costs_part integer,
    current_id integer,
    delivery_date timestamp without time zone,
    dimensions character varying(255) COLLATE pg_catalog."default",
    information boolean,
    is_waited boolean,
    parcel_note character varying(255) COLLATE pg_catalog."default",
    payment bigint,
    send_date timestamp without time zone,
    destination integer,
    send_user_id bigint NOT NULL,
    CONSTRAINT parcels_pkey PRIMARY KEY (parcel_id),
    CONSTRAINT fk1at40td3rhw5f69x0xpsfrk48 FOREIGN KEY (create_user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk2h5s3gyaet9heytuqvc1q7v81 FOREIGN KEY (department_out_id)
        REFERENCES public.departments (department_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk4jr9lpfnwbl518glit4c7qpuc FOREIGN KEY (destination)
        REFERENCES public.departments (department_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkddmwqkmr8ex7xaj6y05xl229d FOREIGN KEY (send_user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.parcels
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.parcel_points
(
    parcel_point_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    arrive_time timestamp without time zone,
    parent_number bigint,
    send_time timestamp without time zone,
    department_id integer NOT NULL,
    into_user_id bigint,
    out_user_id bigint,
    parcel_id bigint,
    parcel_number character varying(255) COLLATE pg_catalog."default",
    parent character varying(255) COLLATE pg_catalog."default",
    payment bigint,
    text character varying(255) COLLATE pg_catalog."default",
    to_department_id integer,
    CONSTRAINT parcel_points_pkey PRIMARY KEY (parcel_point_id),
    CONSTRAINT fk1n97bfshybi65r4oo49cp20g1 FOREIGN KEY (into_user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkbonr9o1jn566diw0onmy9otsa FOREIGN KEY (to_department_id)
        REFERENCES public.departments (department_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkq3yx908ke4gwtdv1k68ux2rjb FOREIGN KEY (out_user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkqpqf929c2vnwqhmmepav8uy4q FOREIGN KEY (department_id)
        REFERENCES public.departments (department_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.parcel_points
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.containers
(
    container_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 233 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    container_number character varying(255) COLLATE pg_catalog."default",
    registration_date timestamp without time zone,
    release_date timestamp without time zone,
    department_id integer NOT NULL,
    value_id integer NOT NULL,
    is_enable boolean,
    CONSTRAINT containers_pkey PRIMARY KEY (container_id),
    CONSTRAINT fko5q8my3wtn6hbmr0qx0yk2rb4 FOREIGN KEY (value_id)
        REFERENCES public.container_values (value_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT fkrgslfx2cevamd4xopm8j92ncr FOREIGN KEY (department_id)
        REFERENCES public.departments (department_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.containers
    OWNER to postgres;


CREATE TABLE IF NOT EXISTS public.container_notes
(
    note_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 2751 MINVALUE 2751 MAXVALUE 9223372036854775807 CACHE 1 ),
    arrive_note character varying(255) COLLATE pg_catalog."default",
    arrive_time timestamp without time zone,
    delay_note character varying(255) COLLATE pg_catalog."default",
    delay_time bigint,
    is_send boolean,
    send_note character varying(255) COLLATE pg_catalog."default",
    send_pay bigint DEFAULT 0,
    send_time timestamp without time zone,
    time_standard integer,
    container_id integer NOT NULL,
    department_out_id integer NOT NULL,
    user_out_id bigint,
    department_to_id integer,
    user_to_id bigint,
    amount integer DEFAULT 1,
    thermometer character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT container_notes_pkey PRIMARY KEY (note_id),
    CONSTRAINT fk1v249qjvxx6v3nnbos1o5u6a4 FOREIGN KEY (department_out_id)
        REFERENCES public.departments (department_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk6cr0t1v114o7mw2ci82goggb9 FOREIGN KEY (user_out_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk790xl78snrux3n58ndnf6b4t3 FOREIGN KEY (user_to_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fka16dyuhiq2akaqo4f35lmn9df FOREIGN KEY (container_id)
        REFERENCES public.containers (container_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkseeuxad9kqvk44obqrea40xub FOREIGN KEY (department_to_id)
        REFERENCES public.departments (department_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.container_notes
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.between_points
(
    point_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 5 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    container_note_id bigint NOT NULL,
    pass_time timestamp without time zone,
    point_note character varying(255) COLLATE pg_catalog."default",
    department_department_id integer NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT between_points_pkey PRIMARY KEY (point_id),
    CONSTRAINT fkdbh3y4gvwavw0b9grteiorhev FOREIGN KEY (department_department_id)
        REFERENCES public.departments (department_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkniaj2qvkigwnyr4kem54cfj1s FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "refContainerNote" FOREIGN KEY (container_note_id)
        REFERENCES public.container_notes (note_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.between_points
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.event_logs
(
    log_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 34 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    event_id integer,
    new_value character varying(255) COLLATE pg_catalog."default",
    old_value character varying(255) COLLATE pg_catalog."default",
    target bigint,
    log_time timestamp without time zone,
    branch_id integer NOT NULL,
    department_id integer NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT event_logs_pkey PRIMARY KEY (log_id),
    CONSTRAINT fkfyddt7tjjyng7w7nhh8skp38q FOREIGN KEY (branch_id)
        REFERENCES public.branches (branch_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkksg3v85f4mnni796xk6op8nw2 FOREIGN KEY (department_id)
        REFERENCES public.departments (department_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkm1yccrpqp0n245mo1ypbr9iku FOREIGN KEY (user_id)
        REFERENCES public.users (user_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.event_logs
    OWNER to postgres;


